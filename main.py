from __future__ import print_function
from CoolProp.CoolProp import PropsSI

import numpy as np
import CoolProp

print('CoolProp version: ', CoolProp.__version__)
print('CoolProp gitrevision: ', CoolProp.__gitrevision__)
print('CoolProp fluids: ', CoolProp.__fluids__)

# Combustion calculations data
# rho_co2 = 1.98  # [kg/m3] carbon dioxide density at standard conditions
T0 = 21  # [deg C] initial carbon dioxide temperature
P0 = 0.1  # [Pa] initial carbon dioxide pressure
Mc = 0.012  # [kg/mol] carbon molar mass
Mh = 0.001  # [kg/mol] hydrogen molar mass
Mo = 0.016  # [kg/mol] carbon molar mass
Q_ch = 500  # [kJ/mol] CH combustion abount of heat generated
P = 2e6  # [kW] coal power plant power
eff = 0.3  # [-] power plant efficiency
vg = 15.2  # [m/s] maximum gas velocity for the transport pipeline design
L = 500  # [m] pipeline length
pwh = 8e6  # [Pa] wellhead compressor entry pressure
# Pipe calculations data
# Z = 10  # [-] compressibility factor
S = 1.5189  # [-] specific gravity of the gas (at 21C, 1 atm)
Eff = 0.9  # efficiency factor

# Carbon dioxide density in the pipeline, [kg/m3]:
rho_co2 = PropsSI('D', 'T', T0 + 273, 'P', pwh, 'CO2')  # kg/m3

# Compressibility factor, [-]
Z = PropsSI('Z', 'T', T0 + 273, 'P', pwh, 'CO2')

# Amount of heat energy generated by burning 1kg of coal, [kWh/kg]:
heat = Q_ch / (Mc + Mh) / 3600

# Amount of electrical energy generated by power plant in 1h, [kWh]:
E = P

# Amount of coal required to be burned per second to generate the required amount of electrical energy, [kg]:
ch_mass = E / (heat * eff) / 3600

# Amount of CO2 produced, when 1kg of coal is burned, 1mol CH produces 1 mol CO2 (from stocheometry eqaution) [kg]:
co2_mass0 = (Mc + 2 * Mo) / (Mc + Mh)

# Amount of CO2 produced per second, [kg]:
co2_mass = ch_mass * co2_mass0

# Volumetric flow rate of CO2, [m3/s]:
q_co2 = co2_mass / rho_co2

# Required pipeline diameter, [inch]:
d = np.sqrt(4 * q_co2 / (np.pi * vg)) * 39.3701

# Conversion for Panhandle equation
T0r = T0 * 1.8 + 491.67  # [deg R]
Lm = L * 0.621371  # [miles]
pwhp = pwh * 0.000145038  # [psia]
qg = q_co2 / 0.326992313  # [MMscfD]

# Requred pipeline inlet pressure (1st compressor outlet pressure), [psia]:
p1 = np.sqrt(S ** 0.961 * Z * T0r * Lm * (qg / (0.028 * Eff * d ** 2.53)) ** (1 / 0.51) + pwhp ** 2)
dp = (p1 - pwhp) / 0.000145038

print(
    'Carbon dioxide density in the pipeline = {} kg/m3.\n'
    'Compressibility factor = {}\n'
    'Volumetric flow rate of CO2 = {} m3/s.\n'
    'Required pipeline diameter = {} cm.\n'
    'Pipeline pressure difference = {} Pa = {} bar.'.format(
        float("{0:.2f}".format(rho_co2)),
        float("{0:.2f}".format(Z)),
        float("{0:.2f}".format(q_co2)),
        float("{0:.2f}".format(d / 0.3937)),
        float("{0:.2f}".format(dp)),
        float("{0:.2f}".format(dp / 1e5)))
)

# Carbon dioxide enthalpy and entropy calculations at initial conditions:
# enthalpy = PropsSI('H', 'T', T0 + 273, 'P', P0, 'CO2')
# entropy = PropsSI('S', 'T', T0 + 273, 'P', P0, 'CO2')
